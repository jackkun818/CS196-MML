<prism:PrismApplication x:Class="crs.window.App"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:hc="https://handyorg.github.io/handycontrol"
                        xmlns:local="clr-namespace:crs.window"
                        xmlns:prism="http://prismlibrary.com/">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml" />

                <ResourceDictionary Source="pack://application:,,,/crs.theme;component/Themes/Default.xaml" />
                <ResourceDictionary Source="pack://application:,,,/crs.extension;component/Themes/Default.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="MessageBoxCustom"
                   BasedOn="{StaticResource {x:Type hc:MessageBox}}"
                   TargetType="hc:MessageBox">
                <Setter Property="NonClientAreaBackground" Value="Goldenrod" />
                <Setter Property="OtherButtonHoverBackground" Value="{StaticResource PrimaryBrush}" />
                <Setter Property="OtherButtonForeground" Value="White" />
                <Setter Property="OtherButtonHoverForeground" Value="White" />
                <Setter Property="NonClientAreaForeground" Value="White" />
                <Setter Property="CloseButtonForeground" Value="White" />
                <Setter Property="BorderBrush" Value="Goldenrod" />
            </Style>

            <Style BasedOn="{StaticResource ListBoxBaseStyle}" TargetType="ListBox">
                <Setter Property="hc:BorderElement.CornerRadius" Value="4" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Page" />
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
                <!--<Style.Triggers>
                    <DataTrigger Binding="{Binding ItemsSource, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                        <Setter Property="Background" Value="{StaticResource crs_SolidColorBrush.F8F8F8}" />
                    </DataTrigger>
                </Style.Triggers>-->
            </Style>

            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
                <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border Name="Bd"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ListBoxItem.IsSelected" Value="False" />
                                        <Condition Property="UIElement.IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ListBoxItem.IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{StaticResource crs_SolidColorBrush.F89F00}" />
                                    <Setter Property="Foreground" Value="White" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource ComboBoxPlusBaseStyle}" TargetType="hc:ComboBox">
                <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Page" />
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource {x:Type ComboBoxItem}}" TargetType="ComboBoxItem">
                            <Setter Property="Padding" Value="15" />
                            <Setter Property="Foreground" Value="Black" />
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource DataGridBaseStyle}" TargetType="DataGrid">
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="CanUserReorderColumns" Value="False" />
                <Setter Property="CanUserResizeColumns" Value="False" />
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Page" />
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
                <!--<Style.Triggers>
                    <DataTrigger Binding="{Binding ItemsSource, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                        <Setter Property="Background" Value="{StaticResource crs_SolidColorBrush.F8F8F8}" />
                    </DataTrigger>
                </Style.Triggers>-->
            </Style>

            <Style BasedOn="{StaticResource CheckBoxBaseStyle}" TargetType="CheckBox">
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{StaticResource crs_SolidColorBrush.F89F00}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        </ResourceDictionary>
    </Application.Resources>
</prism:PrismApplication>
